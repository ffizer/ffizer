on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  build:
    name: "Build ${{ matrix.job.target }}"
    strategy:
      fail-fast: true
      matrix:
        job:
          - {
              target: aarch64-apple-darwin,
              os: macos-latest,
              jreleaser_platform: osx-aarch_64,
            }
          - {
              target: x86_64-apple-darwin,
              os: macos-latest,
              jreleaser_platform: osx-x86_64,
            }
          - {
              target: x86_64-pc-windows-msvc,
              os: windows-latest,
              jreleaser_platform: windows-x86_64,
            }
          - {
              target: x86_64-unknown-linux-gnu,
              os: ubuntu-latest,
              jreleaser_platform: linux-x86_64,
            }
          - {
              target: aarch64-unknown-linux-gnu,
              os: ubuntu-latest,
              use-cross: true,
              jreleaser_platform: linux-aarch_64,
            }
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Version
      #   shell: bash
      #   run: |
      #     sed -i -e 's/^version = "\(.*\)"/version = "${{ inputs.version }}"/g' Cargo.toml

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target=${{ matrix.job.target }}

      - name: Assemble
        uses: jreleaser/release-action@v2
        with:
          arguments: assemble
        env:
          JRELEASER_PROJECT_VERSION: ${{ inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_PLATFORM_OVERRIDE: ${{ matrix.job.jreleaser_platform }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: artifacts
          path: |
            out/jreleaser/assemble/ffizer/archive/*.zip
            out/jreleaser/assemble/ffizer/archive/*.tgz

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: jreleaser-${{ matrix.job.target }}
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
