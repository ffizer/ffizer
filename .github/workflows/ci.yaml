name: ci-flow

on:
  pull_request:
  push:
    branches:
      - master
      - "releases/*"
    # tags-ignore:
    #   - "[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os.imageName }}
    strategy:
      matrix:
        rust_toolchain: ["stable"]
        os:
          - imageName: ubuntu-latest
            # profile_rustup: default
            profile_ci_flow: ci-static-code-analysis-tasks
            target_platform: x86_64-unknown-linux-gnu
          - target_platform: x86_64-apple-darwin
            imageName: "macOS-latest"
            # profile_rustup: minimal
            profile_ci_flow: none
          # - imageName: "macOS-latest"
          #   profile_rustup: minimal
          #   profile_ci_flow: none
          #   target_platform: aarch64-apple-darwin
          # - imageName: windows-latest
          #   profile_rustup: minimal
          #   profile_ci_flow: none
          #   target_platform:

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          target: ${{ matrix.os.target_platform }}
          # override: true
          # profile: ${{ matrix.os.profile_rustup }}
      # - uses: davidB/rust-cargo-make@v1
      - run: cargo test
        env:
          TARGET: ${{ matrix.os.target_platform }}
          # for list of xcode sdk see https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners#xcode
          # DEVELOPER_DIR: "/Applications/Xcode_11.app/Contents/Developer"
          # CARGO_MAKE_RUN_CODECOV: "true"
          # to have CODECOV_TOKEN go to https://codecov.io/gh/${GITHUB_USER}/${GITHUB_REPO}
          # CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - run: cargo fmt --check
        env:
          TARGET: ${{ matrix.os.target_platform }}
      - run: cargo clippy --workspace --all-features --all-targets -- --deny warnings --allow deprecated --allow unknown-lints
        env:
          TARGET: ${{ matrix.os.target_platform }}

  test:
    name: coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
          fail_ci_if_error: true
