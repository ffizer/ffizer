name: ci-flow

on:
  pull_request:
  push:
    branches:
      - master
      - "releases/*"
    # tags-ignore:
    #   - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build:
    runs-on: ${{ matrix.os.imageName }}
    strategy:
      matrix:
        rust_toolchain: ["stable"]
        os:
          - imageName: ubuntu-latest
            profile_rustup: default
            profile_ci_flow: ci-static-code-analysis-tasks
          - imageName: "macOS-latest"
            profile_rustup: minimal
            profile_ci_flow: none
          - imageName: windows-latest
            profile_rustup: minimal
            profile_ci_flow: none

    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          override: true
          profile: ${{matrix.os.profile_rustup}}
      - uses: davidB/rust-cargo-make@v1
      - uses: actions/checkout@v2.3.4
      - name: Run tests
        run: cargo make --profile "${{matrix.os.profile_ci_flow}}" ci-flow
        env:
          # for list of xcode sdk see https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners#xcode
          # DEVELOPER_DIR: "/Applications/Xcode_11.app/Contents/Developer"
          CARGO_MAKE_RUN_CODECOV: "true"
          # to have CODECOV_TOKEN go to https://codecov.io/gh/${GITHUB_USER}/${GITHUB_REPO}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      # - name: Update snapcraft
      #   run: cargo make snapcraft-push
      #   env:
      #     # to have SNAPCRAFT_TOKEN call `snapcraft export-login --snaps ${SNAP_NAME} --channels edge,beta,candidate -`
      #     SNAPCRAFT_TOKEN: ${{ secrets.SNAPCRAFT_TOKEN }}
      #     SNAPCRAFT_CHANNEL: edge
