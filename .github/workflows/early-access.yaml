name: early-access

on:
  push:
    branches: [main, master]
    tags-ignore:
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  precheck:
    if: startsWith(github.event.head_commit.message, 'Releasing version') != true
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Version
        id: vars
        shell: bash
        run: |
          VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

  build:
    needs: [precheck]
    if: endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT')
    uses: ./.github/workflows/_build.yml
    with:
      version: ${{ needs.precheck.outputs.VERSION }}

  universal:
    needs: [precheck, build]
    if: endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT')
    uses: ./.github/workflows/_build-universal.yml
    with:
      version: ${{ needs.precheck.outputs.VERSION }}

  release:
    needs: [precheck, universal]
    if: endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          arguments: release -PartifactsDir=artifacts -PskipArchiveResolver
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
