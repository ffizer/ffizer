[package]
name = "ffizer"
version = "2.2.2-dev"
authors = ["David Bernard"]
description = """ffizer is a files and folders initializer / generator.
It creates or updates any kind (or part) of project from template(s)"""
readme = "README.md"
license = "CC0-1.0"
keywords = ["project", "generator", "template", "skeleton"]
categories = ["command-line-utilities", "development-tools", "template-engine"]
repository = "https://github.com/ffizer/ffizer"
homepage = "https://ffizer.github.io/ffizer/book/"
exclude = ["/.github/**", "/docs/**", "/scripts/**", ".gitignore", "/tests/**"]
edition = "2018"

[dependencies]
clap = "2"
console = "0.14.1"
dialoguer = "0.8.0"
difference = "2.0.0"
directories = "3.0.1"
git2 = "0.13.17"
git2_credentials = "0.7"
globset = "0.4.6"
handlebars = "3.5.3"
handlebars_misc_helpers = {version = "0.11", features = [ "string", "http_reqwest", "json", "jsonnet" ], default-features = false }
human-panic = { version = "1.0.3", optional = true}
indicatif = "0.15.0"
lazy_static ="1.4.0"
md5 = "0.7.0"
regex = "1.4.5"
run_script = "0.7.0"
schemars = "0.8"
serde = { version = "1.0", features = [ "derive"] }
serde_json ="1.0.64"
serde_plain = "0.3.0"
serde_yaml = "0.8"
slog = { version = "2.7.0", features = ["max_level_trace", "release_max_level_warn", "nested-values"] }
slog-term = { version = "2.8.0", optional = true }
slog-stdlog = { version = "4.1.0", optional = true }
tempfile = "3.2.0"
thiserror = "1.0"
structopt = "0.3.21"
walkdir = "2.3.1"

[dev-dependencies]
assert_cmd = "1.0.3"
# rexpect = "0.3"
spectral = "0.6.0"
test-generator = "0.3.0"
predicates = "1.0.7"
pretty_assertions = "0.7.1"

[[bin]]
name = "ffizer"
path = "src/main.rs"
doc = false
# HACK to define dependencies only for cli
# see https://github.com/rust-lang/cargo/issues/1982
required-features = ["cli"]

[target.'cfg(all(unix, not(target_os = "redox")))'.dependencies]
libc = "0.2"
openssl = { version = "0.10", features = ["vendored"] }
# self_update = { version = "0.12.0", optional = true, features = ["archive-zip", "compression-zip-deflate"]}
self_update = { version = "0.26.0", optional = true, features = ["archive-zip"]}

[target.'cfg(windows)'.dependencies]
winapi = "0.3"
self_update = { version = "0.26.0", optional = true, features = ["archive-tar", "compression-flate2"]}

# see https://github.com/johnthagen/min-sized-rust
[profile.release]
# Enables link time optimizations which tells the compiler to optimize code generation at link time and can result in dropping code that is not used.
lto = true
# Stops Rust generating a helpful stack trace and panic message when it panics. With this optimization it will be much harder to figure out what went wrong when the program crashes.
panic = 'abort'
# Tells the compiler to optimize for minimal code size. This will make the code less performant but it will take up less space.
opt-level = 'z'
# Tells the compiler to use only one code generator instead of running several in parallel. Disabling parallel code generation makes the compilation slower but makes all optimizations possible.
codegen-units = 1

[features]
default = ["cli"]
test_remote = [] # feature has no explicit dependencies
cli = ["self_update", "human-panic", "slog-stdlog", "slog-term"]
